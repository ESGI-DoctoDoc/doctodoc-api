name: Deploy on stage

on:
  workflow_dispatch:

jobs:
  build_image_and_deploy_image_on_docker_hub:
    runs-on: ubuntu-latest

    env:
      REPOSITORY: ${{ secrets.DOCKER_HUB_REGISTRY }}

    steps:
      # https://github.com/actions/checkout
      - uses: actions/checkout@v4
        with:
          ref: develop

      - name: Configure application.properties stage configuration
        run: echo "${{ secrets.PROPERTIES_STAGE_CONFIG }}" > ./src/main/resources/application.properties

      - name: Configure firebase config
        run: echo "${{ secrets.FIREBASE_SERVICE_ACCOUNT_KEY }}" | base64 -d > ./src/main/resources/firebase-service-account-key.json

      - name: Fetch Project Version
        id: extract_project_version
        run: |
          version=$(grep -m 1 '<version>' pom.xml | sed 's/.*<version>\(.*\)<\/version>.*/\1/')
          echo "$version"
          echo "version=$version" >> $GITHUB_OUTPUT

      # https://github.com/docker/login-action
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_LOGIN }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      # https://github.com/docker/build-push-action
      - name: Push Docker image with release version
        uses: docker/build-push-action@v5
        with:
          file: ./Dockerfile
          context: .
          push: true
          tags: ${{ env.REPOSITORY }}:${{ steps.extract_project_version.outputs.version }}-stage

      # https://github.com/docker/build-push-action
      - name: Push Docker image with release version
        uses: docker/build-push-action@v5
        with:
          file: ./Dockerfile
          context: .
          push: true
          tags: ${{ env.REPOSITORY }}:latest-stage

  deploy_on_prod:
    needs: build_image_and_deploy_image_on_docker_hub
    runs-on: ubuntu-latest

    env:
      deploy_url: ${{ secrets.RENDER_DEPLOY_STAGE_HOOK_URL }}

    steps:
      - name: deploy on render
        run: curl "$deploy_url"
